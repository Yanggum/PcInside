<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension="Resource.cs" #>
<#@ assembly name="System.Xml" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="System.IO" #>
using System;

namespace Pc.PcBoard.Resources.MultilangApi {

	public class MultiLang {
<#
	string projectDir = Host.ResolveAssemblyReference("$(ProjectDir)");
	string xmlPath = Path.Combine(projectDir, "xml\\MultiLanguage.xml");

	XmlDocument xml = new XmlDocument();
	xml.Load(xmlPath);
	
	XmlNodeList setNodeList = xml.SelectNodes("/MultiLanguage/Section/set");

	foreach (XmlNode setNode in setNodeList)
	{
		string key = setNode["key"].InnerText;
		char[] charArr = key.ToCharArray();
		charArr[0] = char.ToUpper(charArr[0]);
		string capitalizedKey = new string(charArr);
		string description = setNode["val"].FirstChild.InnerText;
#>

		/// <summary>
		/// '<#= description #>' 와 유사한 다국어 메시지를 가져옵니다.
		/// </summary>
		public static string <#=capitalizedKey#>
		{ get { return MultilangManager.Instance.Get("<#=key#>"); } }

<#
	}
#>
	}

}